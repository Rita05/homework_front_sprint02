{"ast":null,"code":"var _jsxFileName = \"/Users/nice_gray_mac/myprojects/homework_front_sprint02/src/s2-homeworks/hw01/message/Message.tsx\";\nimport React from 'react';\nimport s from './Message.module.css';\n\n// нужно создать правильный тип вместо any\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// нужно отобразить приходящие данные\nconst Message = props => {\n  const {\n    id,\n    user: {\n      avatar,\n      name\n    },\n    message\n  } = props.message;\n  console.log('message: ', message);\n  console.log('user: ', user);\n  console.log('id: ', id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw1-message-' + props.message.id,\n    className: s.message,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.imageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: 'hw1-avatar-' + props.message.id,\n        src: `${user.avatar}`\n        // создаёт студент\n\n        //\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.text,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: 'hw1-name-' + props.message.id,\n          className: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: 'hw1-text-' + props.message.id,\n          className: s.messageText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw1-time-' + props.message.id,\n      className: s.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","Message","props","id","user","avatar","name","message","console","log","className","children","imageAndText","src","fileName","_jsxFileName","lineNumber","columnNumber","text","messageText","time","_c","$RefreshReg$"],"sources":["/Users/nice_gray_mac/myprojects/homework_front_sprint02/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from 'react'\nimport s from './Message.module.css'\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = any\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n\tconst { id, user: {avatar, name}, message } = props.message;\n\tconsole.log('message: ', message);\n\tconsole.log('user: ', user);\n\tconsole.log('id: ', id);\n\treturn (\n\t\t<div id={'hw1-message-' + props.message.id} className={s.message}>\n\t\t\t<div className={s.imageAndText}>\n\t\t\t\t<img\n\t\t\t\t\tid={'hw1-avatar-' + props.message.id}\n\t\t\t\t\tsrc={`${user.avatar}`}\n\t\t\t\t// создаёт студент\n\n\t\t\t\t//\n\t\t\t\t/>\n\t\t\t\t<div className={s.text}>\n\t\t\t\t\t<div id={'hw1-name-' + props.message.id} className={s.name}>\n\t\t\t\t\t\t{/*создаёт студент*/}\n\n\t\t\t\t\t\t{/**/}\n\t\t\t\t\t</div>\n\t\t\t\t\t<pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n\t\t\t\t\t\t{/*создаёт студент*/}\n\n\t\t\t\t\t\t{/**/}\n\t\t\t\t\t</pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id={'hw1-time-' + props.message.id} className={s.time}>\n\t\t\t\t{/*создаёт студент*/}\n\n\t\t\t\t{/**/}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Message\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA;AACA,MAAMC,OAAO,GAAIC,KAAuB,IAAK;EAC5C,MAAM;IAAEC,EAAE;IAAEC,IAAI,EAAE;MAACC,MAAM;MAAEC;IAAI,CAAC;IAAEC;EAAQ,CAAC,GAAGL,KAAK,CAACK,OAAO;EAC3DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,OAAO,CAAC;EACjCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,IAAI,CAAC;EAC3BI,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEN,EAAE,CAAC;EACvB,oBACCH,OAAA;IAAKG,EAAE,EAAE,cAAc,GAAGD,KAAK,CAACK,OAAO,CAACJ,EAAG;IAACO,SAAS,EAAEZ,CAAC,CAACS,OAAQ;IAAAI,QAAA,gBAChEX,OAAA;MAAKU,SAAS,EAAEZ,CAAC,CAACc,YAAa;MAAAD,QAAA,gBAC9BX,OAAA;QACCG,EAAE,EAAE,aAAa,GAAGD,KAAK,CAACK,OAAO,CAACJ,EAAG;QACrCU,GAAG,EAAG,GAAET,IAAI,CAACC,MAAO;QACrB;;QAEA;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACFjB,OAAA;QAAKU,SAAS,EAAEZ,CAAC,CAACoB,IAAK;QAAAP,QAAA,gBACtBX,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACK,OAAO,CAACJ,EAAG;UAACO,SAAS,EAAEZ,CAAC,CAACQ;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAItD,CAAC,eACNjB,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACK,OAAO,CAACJ,EAAG;UAACO,SAAS,EAAEZ,CAAC,CAACqB;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAI7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNjB,OAAA;MAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACK,OAAO,CAACJ,EAAG;MAACO,SAAS,EAAEZ,CAAC,CAACsB;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAItD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAI,EAAA,GAnCKpB,OAAO;AAqCb,eAAeA,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}